<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>dev.kameshs.funqy</groupId>
    <artifactId>quarkus-java-funqies</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>azure-java-funqy</artifactId>
  <properties>
    <azure.functions.maven.plugin.version>1.9.1
    </azure.functions.maven.plugin.version>
    <functionAppName>azr-greeter-funqy</functionAppName>
    <functionAppRegion>westus</functionAppRegion>
    <functionResourceGroup>java-functions-group</functionResourceGroup>
    <function>quarkus-greeter</function>
    <stagingDirectory>
      ${project.build.directory}/azure-functions/${functionAppName}
    </stagingDirectory>
    <quarkus.package.type>uber-jar</quarkus.package.type>
    <skipTests>true</skipTests>
    <jkube.image.name>quay.io/kameshsampath</jkube.image.name>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-funqy-http</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-azure-functions-http</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- we only use azure plugin to deploy to Azure.
           The directory structure is set up through various plugins in this pom -->
      <plugin>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>azure-functions-maven-plugin</artifactId>
        <version>${azure.functions.maven.plugin.version}</version>
        <configuration>
          <resourceGroup>${functionResourceGroup}</resourceGroup>
          <appName>${functionAppName}</appName>
          <region>${functionAppRegion}</region>
          <runtime>
            <!-- runtime os, could be windows, linux or docker-->
            <os>docker</os>
            <javaVersion>11</javaVersion>
          </runtime>
          <appSettings>
            <property>
              <name>FUNCTIONS_EXTENSION_VERSION</name>
              <value>~3</value>
            </property>
          </appSettings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${resources-plugin.version}</version>
        <executions>
          <!-- add azure required json files
               to Azure staging directory -->
          <execution>
            <id>copy-base-azure-config</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${stagingDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/azure-config</directory>
                  <includes>
                    <include>host.json</include>
                    <include>local.settings.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy unpacked function.json into Azure staging directory -->
          <execution>
            <id>copy-function-json</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${stagingDirectory}/quarkus</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/azure-config</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>function.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- azure plugin wants a specific name for the jar so need to copy runner jar and rename it -->
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-file</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>
                ${project.build.directory}/${project.artifactId}-${project.version}-runner.jar
              </sourceFile>
              <destinationFile>
                ${stagingDirectory}/${project.artifactId}-${project.version}.jar
              </destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--  Make sure its at last for all other package stuff to be done -->
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>${jkube.image.name}</name>
              <build>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <from>
                  mcr.microsoft.com/azure-functions/java:3.0-java${maven.compiler.target}
                </from>
                <env>
                  <AzureWebJobsScriptRoot>/home/site/wwwroot
                  </AzureWebJobsScriptRoot>
                  <AzureFunctionsJobHost__Logging__Console__IsEnabled>true
                  </AzureFunctionsJobHost__Logging__Console__IsEnabled>
                </env>
                <assembly>
                  <mode>dir</mode>
                  <targetDir>/home/site/wwwroot</targetDir>
                  <inline>
                    <id>azure-quarkus-funqy</id>
                    <fileSets>
                      <fileSet>
                        <directory>${stagingDirectory}
                        </directory>
                        <outputDirectory>.</outputDirectory>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-func-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
